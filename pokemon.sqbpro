<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/ambercarbajal/Desktop/INFO330/INFO330-CreatingRelations2/pokemon.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4120"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainnew_table"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="cleaned_split" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="120"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="new_cleaned" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="72"/><column index="3" value="76"/><column index="4" value="89"/><column index="5" value="92"/><column index="6" value="76"/><column index="7" value="78"/><column index="8" value="71"/><column index="9" value="83"/><column index="10" value="81"/><column index="11" value="81"/><column index="12" value="88"/><column index="13" value="68"/><column index="14" value="89"/><column index="15" value="87"/><column index="16" value="92"/><column index="17" value="75"/><column index="18" value="78"/><column index="19" value="82"/><column index="20" value="41"/><column index="21" value="93"/><column index="22" value="92"/><column index="23" value="63"/><column index="24" value="75"/><column index="25" value="122"/><column index="26" value="50"/><column index="27" value="107"/><column index="28" value="57"/><column index="29" value="30"/><column index="30" value="71"/><column index="31" value="98"/><column index="32" value="98"/><column index="33" value="59"/><column index="34" value="68"/><column index="35" value="40"/><column index="36" value="49"/><column index="37" value="49"/><column index="38" value="62"/><column index="39" value="64"/><column index="40" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="new_table" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="72"/><column index="2" value="76"/><column index="3" value="89"/><column index="4" value="92"/><column index="5" value="76"/><column index="6" value="78"/><column index="7" value="71"/><column index="8" value="83"/><column index="9" value="81"/><column index="10" value="81"/><column index="11" value="88"/><column index="12" value="68"/><column index="13" value="89"/><column index="14" value="87"/><column index="15" value="92"/><column index="16" value="75"/><column index="17" value="78"/><column index="18" value="82"/><column index="19" value="41"/><column index="20" value="93"/><column index="21" value="92"/><column index="22" value="63"/><column index="23" value="75"/><column index="24" value="122"/><column index="25" value="50"/><column index="26" value="107"/><column index="27" value="57"/><column index="28" value="30"/><column index="29" value="71"/><column index="30" value="98"/><column index="31" value="98"/><column index="32" value="59"/><column index="33" value="68"/><column index="34" value="40"/><column index="35" value="49"/><column index="36" value="49"/><column index="37" value="62"/><column index="38" value="64"/><column index="39" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="poke" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="split_abilities" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="110"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="testing" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="300"/><column index="2" value="72"/><column index="3" value="76"/><column index="4" value="89"/><column index="5" value="92"/><column index="6" value="76"/><column index="7" value="78"/><column index="8" value="71"/><column index="9" value="83"/><column index="10" value="81"/><column index="11" value="81"/><column index="12" value="88"/><column index="13" value="68"/><column index="14" value="89"/><column index="15" value="87"/><column index="16" value="92"/><column index="17" value="75"/><column index="18" value="78"/><column index="19" value="82"/><column index="20" value="41"/><column index="21" value="93"/><column index="22" value="92"/><column index="23" value="63"/><column index="24" value="134"/><column index="25" value="288"/><column index="26" value="50"/><column index="27" value="107"/><column index="28" value="57"/><column index="29" value="30"/><column index="30" value="78"/><column index="31" value="98"/><column index="32" value="98"/><column index="33" value="59"/><column index="34" value="68"/><column index="35" value="40"/><column index="36" value="49"/><column index="37" value="49"/><column index="38" value="62"/><column index="39" value="64"/><column index="40" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="1NF.sql">-- creates a new table where the abilities are split
-- so that there aren't multiple values in each row 
CREATE TABLE split_abilities AS
SELECT abilities, 
       trim(value) AS split_value
FROM testing, 
     json_each('[&quot;' || replace(abilities, ',', '&quot;,&quot;') || '&quot;]')
WHERE split_value &lt;&gt; '';

SELECT * FROM testing JOIN split_abilities;

-- gets rid of repetition 
DELETE FROM split_abilities
WHERE ROWID NOT IN (
    SELECT MIN(ROWID)
    FROM split_abilities
    GROUP BY abilities, split_value
);

SELECT * FROM split_abilities;

-- get rid of single quotes, and square brackets 
UPDATE split_abilities SET split_value = TRIM 
(split_value,  ']');
UPDATE split_abilities SET split_value = TRIM 
(split_value,  '[');
UPDATE split_abilities SET split_value = TRIM 
(split_value,  &quot; ' &quot;);

-- joins our new split abilities table without the 
-- brackets and single quotes to our originial testing table
CREATE TABLE new_cleaned AS
SELECT testing.*, split_abilities.split_value
FROM testing JOIN split_abilities ON testing.abilities = split_abilities.abilities;

-- final table that gets rid of our abilities column that had 
-- mulitple values in a row
CREATE TABLE new_table AS 
SELECT against_bug, against_dark, against_dragon, against_electric,
against_fairy, against_fight, against_fire, against_flying, against_ghost, 
against_grass, against_ground, against_ice, against_normal, against_poison, 
against_psychic, against_rock, against_steel, against_water, attack, base_egg_steps, 
base_happiness, base_total, capture_rate, classfication, defense, experience_growth, 
height_m, hp, name, percentage_male, pokedex_number, sp_attack, sp_defense,
speed, type1, type2, weight_kg, generation, is_legendary, split_value
FROM new_cleaned;

SELECT * FROM new_table;



</sql><current_tab id="0"/></tab_sql></sqlb_project>
